
plugins {
    id("org.springframework.boot") version "2.2.8.BUILD-SNAPSHOT"
    id("io.spring.dependency-management") version "1.0.9.RELEASE"
    id("org.jetbrains.kotlin.jvm") version '1.3.71'
    id("org.jetbrains.kotlin.plugin.spring") version '1.3.71'
    id("org.jetbrains.kotlin.plugin.jpa") version '1.3.71'
    id("org.jetbrains.kotlin.plugin.noarg") version '1.3.71'
    id("org.jetbrains.kotlin.plugin.allopen") version '1.3.71'
    id("org.asciidoctor.convert") version '1.5.10'
}

apply plugin: 'io.spring.dependency-management'
apply plugin: "org.springframework.boot"
apply plugin: 'kotlin'
apply plugin: "kotlin-kapt"
apply plugin: "kotlin-spring"
apply plugin: "kotlin-jpa"
apply plugin: "kotlin-noarg"
apply plugin: "kotlin-allopen"
apply plugin: "idea"

group = "com.salt.sample"
version = "0.0.1-SNAPSHOT"
java.sourceCompatibility = JavaVersion.VERSION_11

repositories {
    mavenCentral()
    maven { url = uri("https://repo.spring.io/milestone") }
    maven { url = uri("https://repo.spring.io/snapshot") }
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")
    implementation("org.jetbrains.kotlin:kotlin-reflect")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    testImplementation("org.springframework.boot:spring-boot-starter-test") {
        exclude group: "junit", module: "junit"
    }
    testImplementation("org.springframework.restdocs:spring-restdocs-mockmvc")
    testImplementation("com.nhaarman:mockito-kotlin:1.6.0")
    runtimeOnly("com.h2database:h2")
    runtimeOnly("mysql:mysql-connector-java")
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

test {
    useJUnitPlatform()
    outputs.dir snippetsDir
}

asciidoctor {
    inputs.dir snippetsDir
    dependsOn test
}

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

asciidoctor.doFirst {
    delete file('src/main/resources/static/docs')
}

asciidoctor.doLast {
    println("---------------- asciidoctor is Finish!!")
}

task copyDocument(type: Copy) {
    dependsOn asciidoctor
    from file("build/asciidoc/html5")
    into file("src/main/resources/static/docs")  // resources/static/docs 로 복사하여 서버가 돌아가고 있을때 /docs/index.html 로 접속하면 볼수 있음
}

build {
    dependsOn copyDocument
}

bootJar {
    dependsOn asciidoctor
    from ("${asciidoctor.outputDir}/html5") {
        into "BOOT-INF/classes/static/docs"
    }
}
